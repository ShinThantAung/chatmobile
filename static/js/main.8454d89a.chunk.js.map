{"version":3,"sources":["serviceWorker.js","login/style.js","login/login.js","signup/style.js","signup/signup.js","NewChat/styles.js","NewChat/newChat.js","chatlist/styles.js","chatlist/chatList.js","ChatView/styles.js","ChatView/chatView.js","ChatTextBox/styles.js","ChatTextBox/chatTextBox.js","dashboard/styles.js","dashboard/dashboard.js","index.js"],"names":["Boolean","window","location","hostname","match","styles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","form","submit","noAccountHeader","signUpLink","textDecoration","color","fontWeight","errorText","textAlign","firebase","require","LoginComponent","userTyping","whichInput","event","setState","email","target","value","password","submitLogin","e","a","preventDefault","auth","signInWithEmailAndPassword","state","then","props","history","push","err","serverError","console","log","classes","this","className","maxWidth","CssBaseline","Paper","Typography","component","variant","onSubmit","FormControl","required","fullWidth","margin","InputLabel","htmlFor","Input","autoComplete","autoFocus","onChange","id","type","FormControlLabel","control","Checkbox","label","Button","alert","to","React","Component","withStyles","hasAccountHeader","logInLink","SignupComponent","passwordConfirmation","formIsValid","submitSignup","createUserWithEmailAndPassword","authRes","userObj","user","friends","messages","firestore","collection","doc","set","dbErr","signupError","authErr","NewChatComponent","inputType","username","message","submitNewChat","userExists","chatExists","goToChat","createChat","buildDocKey","currentUser","sort","join","newChatSubmitFn","sendTo","goToChatFn","docKey","get","chat","exists","usersSnapshot","docs","map","_doc","data","includes","hHelper","texttmlFor","input","root","backgroundColor","palette","background","height","position","left","flexGrow","paper1","text","secondary","flex","menuroot","menuButton","title","listItem","cursor","newChatBtn","borderRadius","unreadMessage","top","right","fabButton","zIndex","extendedIcon","ChatListComponent","userIsSender","length","sender","userEmail","newChat","newChatBtnFn","selectChat","index","selectChatFn","signOut","submitMessage","msg","chats","selectedChat","users","filter","_usr","update","FieldValue","arrayUnion","timestamp","Date","now","receiverHasRead","friend","newChatBtnClicked","newChatFormVisible","newChatSubmit","chatObj","gutterBottom","List","list","_chat","_index","key","ListItem","button","onClick","selected","selectedChatIndex","ListItemAvatar","Avatar","alt","_user","split","ListItemText","primary","Fragment","substring","ListItemIcon","Divider","content","overflowY","userSent","float","boxSizing","wordWrap","friendSent","clear","ChatViewComponent","componentDidMount","container","document","getElementById","scrollTo","scrollHeight","componentDidUpdate","undefined","_msg","Tooltip","parseInt","toUTCString","sendBtn","viewInput","borderradius","paddingleft","paddingright","border","viewBottom","flexdirection","aligntems","justifycontent","bordertop","chatTextBoxContainer","bottom","marginleft","overflow","chatTextBox","ChatTextBoxComponent","keyCode","chatText","messageValid","txt","replace","userClickedInput","userClickedInputFn","submitMessageFn","TextField","placeholder","onKeyUp","onFocus","loadingroot","justify","signOutBtn","boxShadow","DashboardComponent","showHideChatList","chatIndex","messageRead","usersInChat","find","every","indexOf","clickedMessageWhereNotSender","componentWillMount","onAuthStateChanged","where","onSnapshot","res","hideComponent","bind","name","AppBar","appBar","Toolbar","IconButton","edge","aria-label","Fab","size","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","routing","path","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.8454d89a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const styles = theme => ({\n    main: {\n      width: 'auto',\n      display: 'block', // Fix IE 11 issue.\n      marginLeft: theme.spacing.unit * 3,\n      marginRight: theme.spacing.unit * 3,\n      [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n        width: 400,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n    },\n    paper: {\n      marginTop: theme.spacing.unit * 8,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing.unit,\n    },\n    submit: {\n      marginTop: theme.spacing.unit * 3,\n    },\n    noAccountHeader: {\n      width: '100%'\n    },\n    signUpLink: {\n      width: '100%',\n      textDecoration: 'none',\n      color: '#303f9f',\n      fontWeight: 'bolder'\n    },\n    errorText: {\n      color: 'red',\n      textAlign: 'center'\n    }\n  });\n  \n  export default styles;","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport styles from './style';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst firebase = require(\"firebase\");\n\nclass LoginComponent extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      serverError: false\n    };\n  }\n\n  render() {\n\n    const { classes } = this.props;\n\n    return (\n      <main className={classes.main} maxWidth=\"xs\">\n        <CssBaseline/>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log In!\n          </Typography>\n          <form onSubmit={(e) => this.submitLogin(e)} className={classes.form}>\n            <FormControl required fullWidth margin='normal'>\n              <InputLabel htmlFor='login-email-input'>Enter Your Email</InputLabel>\n              <Input autoComplete='email' autoFocus onChange={(e) => this.userTyping('email', e)} id='login-email-input'></Input>\n            </FormControl>\n            <FormControl required fullWidth margin='normal'>\n              <InputLabel htmlFor='login-password-input'>Enter Your Password</InputLabel>\n              <Input autoComplete=\"current-password\" type=\"password\" onChange={(e) => this.userTyping('password', e)} id='login-password-input'></Input>\n            </FormControl>\n            <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n            <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Log In</Button>\n          </form>\n          { this.state.serverError ? \n            <Typography className={alert} component='h5' variant='h6'>\n              Incorrect Login Information\n            </Typography> :\n            null\n          }\n          <h5 className={classes.noAccountHeader}>Don't Have An Account?</h5>\n          <Link className={classes.signUpLink} to='/signup'>Sign Up!</Link>\n        </Paper>\n      </main>\n    );\n  }\n\n  userTyping = (whichInput, event) => {\n    switch (whichInput) {\n      case 'email':\n        this.setState({ email: event.target.value });\n        break;\n\n      case 'password':\n        this.setState({ password: event.target.value });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  submitLogin = async (e) => {\n    e.preventDefault(); // This is to prevent the automatic refreshing of the page on submit.\n\n    await firebase\n      .auth()\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\n      .then(() => {\n        this.props.history.push('/dashboard');\n      }, err => {\n        this.setState({ serverError: true });\n        console.log('Error logging in: ', err);\n      });\n  };\n\n}\n\nexport default withStyles(styles)(LoginComponent);\n\n\n\n","const styles = theme => ({\n    main: {\n      width: 'auto',\n      display: 'block', // Fix IE 11 issue.\n      marginLeft: theme.spacing.unit * 3,\n      marginRight: theme.spacing.unit * 3,\n      [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n        width: 400,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n    },\n    paper: {\n      marginTop: theme.spacing.unit * 8,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing.unit,\n    },\n    submit: {\n      marginTop: theme.spacing.unit * 3,\n    },\n    hasAccountHeader: {\n      width: '100%'\n    },\n    logInLink: {\n      width: '100%',\n      textDecoration: 'none',\n      color: '#303f9f',\n      fontWeight: 'bolder'\n    },\n    errorText: {\n      color: 'red',\n      textAlign: 'center'\n    }\n  });\n  \n  export default styles;","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport styles from './style';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nconst firebase = require(\"firebase\");\n\nclass SignupComponent extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      passwordConfirmation: null,\n      signupError: ''\n    };\n  }\n\n  render() {\n\n    const { classes } = this.props;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline/>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up!\n          </Typography>\n          <form onSubmit={(e) => this.submitSignup(e)} className={classes.form}>\n            <FormControl required fullWidth margin='normal'>\n              <InputLabel htmlFor='signup-email-input'>Enter Your Email</InputLabel>\n              <Input autoComplete='email' autoFocus onChange={(e) => this.userTyping('email', e)} id='signup-email-input'></Input>\n            </FormControl>\n            <FormControl required fullWidth margin='normal'>\n              <InputLabel htmlFor='signup-password-input'>Create A Password</InputLabel>\n              <Input type=\"password\" onChange={(e) => this.userTyping('password', e)} id='signup-password-input'></Input>\n            </FormControl>\n            <FormControl required fullWidth margin='normal'>\n              <InputLabel htmlFor='signup-password-confirmation-input'>Confirm Your Password</InputLabel>\n              <Input type=\"password\" onChange={(e) => this.userTyping('passwordConfirmation', e)} id='signup-password-confirmation-input'></Input>\n            </FormControl>\n            <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Submit</Button>\n          </form>\n          { \n            this.state.signupError ? \n            <Typography className={classes.errorText} component='h5' variant='h6'>\n              {this.state.signupError}\n            </Typography> :\n            null\n          }\n          <h5 className={classes.hasAccountHeader}>Already Have An Account?</h5>\n          <Link className={classes.logInLink} to='/login'>Log In!</Link>\n        </Paper>\n      </main>\n    );\n  }\n\n  userTyping = (whichInput, event) => {\n    switch (whichInput) {\n      case 'email':\n        this.setState({ email: event.target.value });\n        break;\n\n      case 'password':\n        this.setState({ password: event.target.value });\n        break;\n\n      case 'passwordConfirmation':\n        this.setState({ passwordConfirmation: event.target.value });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  formIsValid = () => this.state.password === this.state.passwordConfirmation;\n\n  submitSignup = (e) => {\n    e.preventDefault(); // This is to prevent the automatic refreshing of the page on submit.\n\n    if(!this.formIsValid()) {\n      this.setState({ signupError: 'Passwords do not match' });\n      return;\n    }\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\n      .then(authRes => {\n        const userObj = {\n          email: authRes.user.email,\n          friends: [],\n          messages: []\n        };\n        firebase\n          .firestore()\n          .collection('users')\n          .doc(this.state.email)\n          .set(userObj)\n          .then(() => {\n            this.props.history.push('/dashboard');\n        }, dbErr => {\n          console.log('Failed to add user to the database: ', dbErr);\n          this.setState({ signupError: 'Failed to add user' });\n        });\n    }, authErr => {\n      console.log('Failed to create user: ', authErr);\n      this.setState({ signupError: 'Failed to add user' });\n    });\n  };\n}\n\nexport default withStyles(styles)(SignupComponent);","const styles = (theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${\n      theme.spacing.unit * 3\n    }px`,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit,\n  },\n  // input: {},\n\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  errorText: {\n    color: \"red\",\n    textAlign: \"center\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  Button,\n  Paper,\n  withStyles,\n  CssBaseline,\n  Typography,\n} from \"@material-ui/core\";\nimport styles from \"./styles\";\nconst firebase = require(\"firebase\");\n\nclass NewChatComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      username: null,\n      message: null,\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h3\">\n            Send A Message!\n          </Typography>\n          <form\n            className={classes.form}\n            onSubmit={(e) => this.submitNewChat(e)}\n          >\n            <FormControl fullWidth>\n              <InputLabel hHelper texttmlFor=\"new-chat-username\">\n                Friend's Email\n              </InputLabel>\n              <Input\n                required\n                className={classes.input}\n                autoFocus\n                onChange={(e) => this.userTyping(\"username\", e)}\n                id=\"new-chat-username\"\n              ></Input>\n            </FormControl>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"new-chat-message\">\n                Enter Your Message\n              </InputLabel>\n              <Input\n                required\n                className={classes.input}\n                onChange={(e) => this.userTyping(\"message\", e)}\n                id=\"new-chat-message\"\n              ></Input>\n            </FormControl>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              type=\"submit\"\n            >\n              Send\n            </Button>\n          </form>\n          {this.state.serverError ? (\n            <Typography\n              component=\"h5\"\n              variant=\"h6\"\n              className={classes.errorText}\n            >\n              Unable to locate the user\n            </Typography>\n          ) : null}\n        </Paper>\n      </main>\n    );\n  }\n\n  componentWillMount() {\n    if (!firebase.auth().currentUser) this.props.history.push(\"/login\");\n  }\n\n  userTyping = (inputType, e) => {\n    switch (inputType) {\n      case \"username\":\n        this.setState({ username: e.target.value });\n        break;\n\n      case \"message\":\n        this.setState({ message: e.target.value });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  submitNewChat = async (e) => {\n    e.preventDefault();\n    const userExists = await this.userExists();\n    if (userExists) {\n      const chatExists = await this.chatExists();\n      chatExists ? this.goToChat() : this.createChat();\n    }\n  };\n\n  buildDocKey = () =>\n    [firebase.auth().currentUser.email, this.state.username].sort().join(\":\");\n\n  createChat = () => {\n    this.props.newChatSubmitFn({\n      sendTo: this.state.username,\n      message: this.state.message,\n    });\n  };\n\n  goToChat = () =>\n    this.props.goToChatFn(this.buildDocKey(), this.state.message);\n\n  chatExists = async () => {\n    const docKey = this.buildDocKey();\n    const chat = await firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .get();\n    console.log(chat.exists);\n    return chat.exists;\n  };\n  userExists = async () => {\n    const usersSnapshot = await firebase.firestore().collection(\"users\").get();\n    const exists = usersSnapshot.docs\n      .map((_doc) => _doc.data().email)\n      .includes(this.state.username);\n    this.setState({ serverError: !exists });\n    return exists;\n  };\n}\n\nexport default withStyles(styles)(NewChatComponent);\n","const styles = (theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    height: \"100%\",\n    position: \"absolute\",\n    left: \"0\",\n    width: \"auto\",\n    // margin: \"25px\",\n\n    // boxShadow: \"1px 1px 1px gray\",\n    flexGrow: 1,\n  },\n  paper1: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    flex: \"1 0 auto\",\n    margin: theme.spacing(3),\n  },\n  menuroot: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  listItem: {\n    // marginBottom: theme.spacing(2),\n    cursor: \"pointer\",\n    // backgroundColor:'#DADEE5'\n  },\n  newChatBtn: {\n    borderRadius: \"0px\",\n  },\n  unreadMessage: {\n    color: \"green\",\n    position: \"absolute\",\n    top: \"0\",\n    right: \"5px\",\n  },\n  margin: {\n    margin: theme.spacing(1),\n    // paddingleft:\"30px;\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -5,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\",\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styles from \"./styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport NotificationImportant from \"@material-ui/icons/NotificationImportant\";\n// import Fab from \"@material-ui/core/Fab\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import AppBar from \"@material-ui/core/AppBar\";\n// import Toolbar from \"@material-ui/core/Toolbar\";\n// import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n// import Hidden from '@material-ui/core/Hidden';\n// import AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nconst firebase = require(\"firebase\");\nclass ChatListComponent extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    if (this.props.chats.length > 0) {\n      return (\n        <div className={classes.root}>\n          {/* <Hidden only={['xs']}> */}\n          <Paper className={classes.paper1}>\n            <Typography className={classes.text} variant=\"h5\" gutterBottom>\n              {/* Inbox */}\n            </Typography>\n            <List className={classes.list}>\n              {this.props.chats.map((_chat, _index) => {\n                return (\n                  <div key={_index}>\n                    <ListItem\n                      button\n                      onClick={() => this.selectChat(_index)}\n                      className={classes.listItem}\n                      selected={this.props.selectedChatIndex === _index}\n                      alignItems=\"flex-start\"\n                    >\n                      <ListItemAvatar>\n                        <Avatar alt=\"Remy Sharp\">\n                          {\n                            _chat.users\n                              .filter(\n                                (_user) => _user !== this.props.userEmail\n                              )[0]\n                              .split(\"\")[0]\n                          }\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText\n                        primary={\n                          _chat.users.filter(\n                            (_user) => _user !== this.props.userEmail\n                          )[0]\n                        }\n                        secondary={\n                          <React.Fragment>\n                            <Typography component=\"span\" color=\"textPrimary\">\n                              {_chat.messages[\n                                _chat.messages.length - 1\n                              ].message.substring(0, 30) + \" ...\"}\n                            </Typography>\n                          </React.Fragment>\n                        }\n                      />\n                      {_chat.receiverHasRead === false &&\n                      !this.userIsSender(_chat) ? (\n                        <ListItemIcon>\n                          <NotificationImportant\n                            className={classes.unreadMessage}\n                          ></NotificationImportant>\n                        </ListItemIcon>\n                      ) : null}\n                    </ListItem>\n                    <Divider />\n                  </div>\n                );\n              })}\n            </List>\n\n            {/* <Typography variant=\"h6\" className={classes.title}>\n              <Fab\n                size=\"medium\"\n                color=\"secondary\"\n                aria-label=\"add\"\n                onClick={this.newChat}\n              >\n                <AddIcon />\n              </Fab>\n            </Typography> */}\n          </Paper>\n          {/* <div className={classes.root}> */}\n          {/* </Hidden>  */}\n          {/* <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n              >\n                <AccountCircleIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                <Fab\n                  size=\"medium\"\n                  color=\"secondary\"\n                  aria-label=\"add\"\n                  onClick={this.newChat}\n                >\n                  <AddIcon />\n                </Fab>\n              </Typography>\n\n              <Button color=\"inherit\" onClick={this.signOut}>\n                LogOut\n              </Button>\n            </Toolbar>\n          </AppBar> */}\n        </div>\n      );\n    } else {\n      return (\n        <div className={classes.root}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            onClick={this.newChat}\n            className={classes.newChatBtn}\n          >\n            New Message\n          </Button>\n          <List></List>\n        </div>\n      );\n    }\n  }\n  userIsSender = (chat) =>\n    chat.messages[chat.messages.length - 1].sender === this.props.userEmail;\n  newChat = () => this.props.newChatBtnFn();\n  selectChat = (index) => this.props.selectChatFn(index);\n  signOut = () => firebase.auth().signOut();\n\n  submitMessage = (msg) => {\n    const docKey = this.buildDocKey(\n      this.state.chats[this.state.selectedChat].users.filter(\n        (_usr) => _usr !== this.state.email\n      )[0]\n    );\n    firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .update({\n        messages: firebase.firestore.FieldValue.arrayUnion({\n          sender: this.state.email,\n          message: msg,\n          timestamp: Date.now(),\n        }),\n        receiverHasRead: false,\n      });\n  };\n\n  // Always in alphabetical order:\n  // 'user1:user2'\n  buildDocKey = (friend) => [this.state.email, friend].sort().join(\":\");\n\n  newChatBtnClicked = () =>\n    this.setState({ newChatFormVisible: true, selectedChat: null });\n\n  newChatSubmit = async (chatObj) => {\n    const docKey = this.buildDocKey(chatObj.sendTo);\n    await firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .set({\n        messages: [\n          {\n            message: chatObj.message,\n            sender: this.state.email,\n          },\n        ],\n        users: [this.state.email, chatObj.sendTo],\n        receiverHasRead: false,\n      });\n    this.setState({ newChatFormVisible: false });\n    this.selectChat(this.state.chats.length - 1);\n  };\n}\n\nexport default withStyles(styles)(ChatListComponent);\n","const styles = (theme) => ({\n  content: {\n    height: \"calc(100vh - 70px)\",\n    // overflow: \"auto\",\n    // padding: \"20px\",\n    // marginLeft: \"100px\",\n    // marginRight: \"10px\",\n    // boxSizing: \"border-box\",\n    overflowY: \"scroll\",\n    marginTop: \"-180px\",\n    width: \"280px\",\n    position: \"absolute\",\n  },\n\n  userSent: {\n    float: \"right\",\n    // clear: \"both\",\n    // padding: \"20px\",\n    boxSizing: \"border-box\",\n    wordWrap: \"break-word\",\n    marginTop: \"10px\",\n\n    backgroundColor: \"#5399F3\",\n    color: \"white\",\n    width: \"200px\",\n    height: \"auto\",\n    marginLeft: \"50px\",\n    borderRadius: \"20px\",\n  },\n\n  friendSent: {\n    float: \"left\",\n    clear: \"both\",\n    // padding: \"20px\",\n    boxSizing: \"border-box\",\n    // wordWrap: \"break-word\",\n    marginTop: \"10px\",\n    marginRight: \"70px\",\n    backgroundColor: \"#EDF2F3\",\n    color: \"black\",\n    width: \"200px\",\n    borderRadius: \"20px\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport \"./ChatView.scss\";\nimport \"./chatView.css\";\nimport ReactLoading from \"react-loading\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Avatar from \"@material-ui/core/Avatar\";\nclass ChatViewComponent extends React.Component {\n  componentDidMount = () => {\n    const container = document.getElementById(\"chatview-container\");\n    if (container) container.scrollTo(0, container.scrollHeight);\n  };\n  componentDidUpdate = () => {\n    const container = document.getElementById(\"chatview-container\");\n    if (container) container.scrollTo(0, container.scrollHeight);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    if (this.props.chat === undefined) {\n      return <main className={classes.content}></main>;\n    } else if (this.props.chat !== undefined) {\n      return (\n        <div className=\"viewChatBoard\">\n          <div className=\"headerChatBoard\">\n            <Avatar alt=\"Remy Sharp\">\n              {\n                this.props.chat.users\n                  .filter((_user) => _user !== this.props.userEmail)[0]\n                  .split(\"\")[0]\n              }\n            </Avatar>\n            <span className=\"textHeaderChatBoard\">\n              {\n                this.props.chat.users.filter(\n                  (_usr) => _usr !== this.props.user\n                )[0]\n              }\n            </span>\n          </div>\n          {/* <div id=\"chat-title\">\n            Your conversation with{\" \"}\n            {\n              this.props.chat.users.filter(\n                (_usr) => _usr !== this.props.user\n              )[0]\n            }\n          </div> */}\n\n          {/* <main className={classes.content}> */}\n          <div className=\"viewListContentChat\">\n            {this.props.chat.messages.map((_msg, _index) => {\n              return (\n                <div\n                  key={_index}\n                  className={\n                    _msg.sender === this.props.user\n                      ? classes.userSent\n                      : classes.friendSent\n                  }\n                >\n                  <div className=\"viewListContentChat\">\n                    <Tooltip\n                      title={new Date(parseInt(_msg.timestamp)).toUTCString()}\n                    >\n                      <div>{_msg.message}</div>\n                    </Tooltip>\n                  </div>\n                  {/* <div className={classes.Conversationtime}>\n                    {\" \"}\n                    <span>\n                      {_msg.receiverHasRead === true ? \"yrdy\" : \"seen\"}\n                    </span>\n                  </div> */}\n                </div>\n              );\n            })}\n            <div\n            // style={{ float: \"left\", clear: \"both\" }}\n            // ref={(el) => {\n            //   this.messagesEnd = el;\n            // }}\n            />\n          </div>\n          {/* </main> */}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"viewLoading\">\n          <ReactLoading\n            type={\"bars\"}\n            color={\"#203152\"}\n            height={\"3%\"}\n            width={\"3%\"}\n          />\n        </div>\n      );\n    }\n  }\n}\n\nexport default withStyles(styles)(ChatViewComponent);\n","const styles = (theme) => ({\n  sendBtn: {\n    color: \"blue\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      color: \"gray\",\n    },\n  },\n  viewInput: {\n    flex: \"1\",\n    borderradius: \"4px\",\n    paddingleft: \"10px\",\n    paddingright: \"10px\",\n    border: \"0px\",\n    height: \"30px\",\n  },\n  viewBottom: {\n    display: \"flex\",\n    flexdirection: \"row\",\n    aligntems: \"center\",\n    justifycontent: \"center\",\n    height: \"50px\",\n    bordertop: \"1px solid #e8e8e8\",\n    width: \"auto\",\n  },\n\n  chatTextBoxContainer: {\n    position: \"absolute\",\n    bottom: \"15px\",\n    // left: \"315px\",\n    margin: \"-10px\",\n    marginleft: \"1px\",\n    boxSizing: \"border-box\",\n    overflow: \"auto\",\n\n    // width: \"30px\",\n  },\n\n  chatTextBox: {\n    width: \"240px\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Send from \"@material-ui/icons/Send\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nclass ChatTextBoxComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chatText: \"\",\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.chatTextBoxContainer}>\n        <TextField\n          placeholder=\"Type your message..\"\n          onKeyUp={(e) => this.userTyping(e)}\n          id=\"chattextbox\"\n          className={classes.chatTextBox}\n          onFocus={this.userClickedInput}\n        ></TextField>\n        <Send onClick={this.submitMessage} className={classes.sendBtn}></Send>\n      </div>\n    );\n  }\n  userTyping = (e) =>\n    e.keyCode === 13\n      ? this.submitMessage()\n      : this.setState({ chatText: e.target.value });\n  messageValid = (txt) => txt && txt.replace(/\\s/g, \"\").length;\n  userClickedInput = () => this.props.userClickedInputFn();\n  submitMessage = () => {\n    if (this.messageValid(this.state.chatText)) {\n      this.props.submitMessageFn(this.state.chatText);\n      document.getElementById(\"chattextbox\").value = \"\";\n    }\n  };\n}\n\nexport default withStyles(styles)(ChatTextBoxComponent);\n","const styles = (theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  loadingroot: {\n    justify: \"center\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  unreadMessage: {\n    color: \"red\",\n    position: \"absolute\",\n    top: \"0\",\n    right: \"5px\",\n  },\n  signOutBtn: {\n    position: \"absolute\",\n    bottom: \"0px\",\n    left: \"0px\",\n    width: \"300px\",\n    borderRadius: \"0px\",\n    backgroundColor: \"#227092\",\n    height: \"35px\",\n    boxShadow: \"0px 0px 2px black\",\n    color: \"white\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport NewChatComponent from \"../NewChat/newChat\";\nimport ChatListComponent from \"../chatlist/chatList\";\nimport ChatViewComponent from \"../ChatView/chatView.js\";\nimport ChatTextBoxComponent from \"../ChatTextBox/chatTextBox\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styles from \"./styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ReactLoading from \"react-loading\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport \"./dashboard.css\";\n// import Paper from \"@material-ui/core/Paper\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n// import Hidden from '@material-ui/core/Hidden';\n// import Menu from \"@material-ui/core/Menu\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\n\n// import AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nconst firebase = require(\"firebase\");\n\n// I need to investigate why sometimes\n// two messages will send instead of just\n// one. I dont know if there are two instances\n// of the chat box component or what...\n\n// I will be using both .then and async/await\n// in this tutorial to give a feel of both.\n\nclass DashboardComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedChat: null,\n      newChatFormVisible: false,\n      email: null,\n      friends: [],\n      chats: [],\n      showHideChatList: true,\n    };\n    this.hideComponent = this.hideComponent.bind(this);\n  }\n  hideComponent(name) {\n    switch (name) {\n      case \"showHideChatList\":\n        this.setState({\n          showHideChatList: !this.state.showHideChatList,\n        });\n\n        break;\n      default:\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { showHideChatList } = this.state;\n\n    if (this.state.email) {\n      return (\n        <div className=\"root\">\n          <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n            <Toolbar>\n              <Tooltip title=\"Show Friend List\">\n                <IconButton\n                  edge=\"start\"\n                  className={classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"menu\"\n                >\n                  <MenuIcon\n                    onClick={() => this.hideComponent(\"showHideChatList\")}\n                  />\n                </IconButton>\n              </Tooltip>\n              <Typography variant=\"h6\" className={classes.title}>\n                <Tooltip title=\"Add Friend\">\n                  <Fab\n                    size=\"medium\"\n                    color=\"secondary\"\n                    aria-label=\"add\"\n                    onClick={this.newChatBtnClicked}\n                  >\n                    <AddIcon />\n                  </Fab>\n                </Tooltip>\n              </Typography>\n\n              <Button color=\"inherit\" onClick={this.signOut}>\n                LogOut\n              </Button>\n              {/* <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"secondary\"\n                aria-label=\"menu\"\n              >\n                <AccountCircleIcon />\n              </IconButton> */}\n            </Toolbar>\n          </AppBar>\n          <div className=\"viewListUser\">\n            {showHideChatList && (\n              <ChatListComponent\n                history={this.props.history}\n                userEmail={this.state.email}\n                selectChatFn={this.selectChat}\n                chats={this.state.chats}\n                selectedChatIndex={this.state.selectedChat}\n                newChatBtnFn={this.newChatBtnClicked}\n              ></ChatListComponent>\n            )}\n          </div>\n          <div className=\"viewBoard\">\n            {this.state.showHideChatList ||\n            this.state.newChatFormVisible ? null : (\n              <ChatViewComponent\n                user={this.state.email}\n                chat={this.state.chats[this.state.selectedChat]}\n              ></ChatViewComponent>\n            )}\n            {this.state.selectedChat !== null &&\n            !this.state.newChatFormVisible ? (\n              <ChatTextBoxComponent\n                userClickedInputFn={this.messageRead}\n                submitMessageFn={this.submitMessage}\n              ></ChatTextBoxComponent>\n            ) : null}\n            {this.state.newChatFormVisible && !this.state.showHideChatList ? (\n              <NewChatComponent\n                goToChatFn={this.goToChat}\n                newChatSubmitFn={this.newChatSubmit}\n              ></NewChatComponent>\n            ) : null}\n          </div>\n\n          {/* <Button onClick={this.signOut} className={classes.signOutBtn}>LogOut</Button> */}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"viewLoading\">\n          <ReactLoading\n            type={\"bars\"}\n            color={\"#0390fc\"}\n            height={\"15%\"}\n            width={\"15%\"}\n          />\n        </div>\n      );\n    }\n  }\n\n  signOut = () => firebase.auth().signOut();\n  userIsSender = (chat) =>\n    chat.messages[chat.messages.length - 1].sender === this.props.userEmail;\n  newChat = () => this.props.newChatBtnFn();\n  selectChat = (index) => this.props.selectChatFn(index);\n  submitMessage = (msg) => {\n    const docKey = this.buildDocKey(\n      this.state.chats[this.state.selectedChat].users.filter(\n        (_usr) => _usr !== this.state.email\n      )[0]\n    );\n    firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .update({\n        messages: firebase.firestore.FieldValue.arrayUnion({\n          sender: this.state.email,\n          message: msg,\n          timestamp: Date.now(),\n        }),\n        receiverHasRead: false,\n      });\n  };\n\n  // Always in alphabetical order:\n  // 'user1:user2'\n  buildDocKey = (friend) => [this.state.email, friend].sort().join(\":\");\n\n  newChatBtnClicked = () =>\n    this.setState({\n      newChatFormVisible: true,\n      selectedChat: null,\n      showHideChatList: false,\n    });\n\n  newChatSubmit = async (chatObj) => {\n    const docKey = this.buildDocKey(chatObj.sendTo);\n    await firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .set({\n        messages: [\n          {\n            message: chatObj.message,\n            sender: this.state.email,\n          },\n        ],\n        users: [this.state.email, chatObj.sendTo],\n        receiverHasRead: false,\n      });\n    this.setState({ newChatFormVisible: false });\n    this.selectChat(this.state.chats.length - 1);\n  };\n\n  selectChat = async (chatIndex) => {\n    await this.setState({\n      selectedChat: chatIndex,\n      newChatFormVisible: false,\n      showHideChatList: false,\n    });\n    this.messageRead();\n  };\n\n  goToChat = async (docKey, msg) => {\n    const usersInChat = docKey.split(\":\");\n    const chat = this.state.chats.find((_chat) =>\n      usersInChat.every((_user) => _chat.users.includes(_user))\n    );\n    this.setState({ newChatFormVisible: false });\n    await this.selectChat(this.state.chats.indexOf(chat));\n    this.submitMessage(msg);\n  };\n\n  // Chat index could be different than the one we are currently on in the case\n  // that we are calling this function from within a loop such as the chatList.\n  // So we will set a default value and can overwrite it when necessary.\n  messageRead = () => {\n    const chatIndex = this.state.selectedChat;\n    const docKey = this.buildDocKey(\n      this.state.chats[chatIndex].users.filter(\n        (_usr) => _usr !== this.state.email\n      )[0]\n    );\n    if (this.clickedMessageWhereNotSender(chatIndex)) {\n      firebase\n        .firestore()\n        .collection(\"chats\")\n        .doc(docKey)\n        .update({ receiverHasRead: true });\n    } else {\n      console.log(\"Clicked message where the user was the sender\");\n    }\n  };\n\n  clickedMessageWhereNotSender = (chatIndex) =>\n    this.state.chats[chatIndex].messages[\n      this.state.chats[chatIndex].messages.length - 1\n    ].sender !== this.state.email;\n\n  componentWillMount = () => {\n    firebase.auth().onAuthStateChanged(async (_usr) => {\n      if (!_usr) this.props.history.push(\"/login\");\n      else {\n        await firebase\n          .firestore()\n          .collection(\"chats\")\n          .where(\"users\", \"array-contains\", _usr.email)\n          .onSnapshot(async (res) => {\n            const chats = res.docs.map((_doc) => _doc.data());\n            await this.setState({\n              email: _usr.email,\n              chats: chats,\n              friends: [],\n            });\n          });\n      }\n    });\n  };\n}\n\nexport default withStyles(styles)(DashboardComponent);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport LoginComponent from \"./login/login\";\nimport SignupComponent from \"./signup/signup\";\nimport DashboardComponent from \"./dashboard/dashboard\";\n\nconst firebase = require(\"firebase\");\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDS-knD91grk11ncjxKIDIJ8kg5f3WMQKo\",\n  authDomain: \"chatapp-41400.firebaseapp.com\",\n  databaseURL: \"https://chatapp-41400.firebaseio.com\",\n  projectId: \"chatapp-41400\",\n  storageBucket: \"chatapp-41400.appspot.com\",\n  messagingSenderId: \"83377735851\",\n  appId: \"1:83377735851:web:d4c4535f522b1b1be78fee\",\n  measurementId: \"G-HQYVDFKZ9G\",\n});\n\nconst routing = (\n  <Router>\n    <div id=\"routing-container\">\n      <Route path=\"/chatmobile\" component={LoginComponent}></Route>\n      <Route path=\"/login\" component={LoginComponent}></Route>\n      <Route path=\"/signup\" component={SignupComponent}></Route>\n      <Route path=\"/dashboard\" component={DashboardComponent}></Route>\n    </div>\n  </Router>\n);\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}